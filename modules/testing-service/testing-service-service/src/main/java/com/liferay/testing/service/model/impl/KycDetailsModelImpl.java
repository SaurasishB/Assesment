/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.testing.service.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;
import com.liferay.testing.service.model.KycDetails;
import com.liferay.testing.service.model.KycDetailsModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the KycDetails service. Represents a row in the &quot;Panasonic_KycDetails&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>KycDetailsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link KycDetailsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see KycDetailsImpl
 * @generated
 */
@JSON(strict = true)
public class KycDetailsModelImpl
	extends BaseModelImpl<KycDetails> implements KycDetailsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a kyc details model instance should use the <code>KycDetails</code> interface instead.
	 */
	public static final String TABLE_NAME = "Panasonic_KycDetails";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"kycDetailId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"address", Types.VARCHAR}, {"panNumber", Types.VARCHAR},
		{"gstnNumber", Types.VARCHAR}, {"typeOfBusiness", Types.VARCHAR},
		{"addressProofId", Types.BIGINT}, {"panProofId", Types.BIGINT},
		{"gstnProofId", Types.BIGINT}, {"typeOfBusinessId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("kycDetailId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("address", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("panNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gstnNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("typeOfBusiness", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("addressProofId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("panProofId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("gstnProofId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("typeOfBusinessId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table Panasonic_KycDetails (uuid_ VARCHAR(75) null,kycDetailId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,address VARCHAR(75) null,panNumber VARCHAR(75) null,gstnNumber VARCHAR(75) null,typeOfBusiness VARCHAR(75) null,addressProofId LONG,panProofId LONG,gstnProofId LONG,typeOfBusinessId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table Panasonic_KycDetails";

	public static final String ORDER_BY_JPQL =
		" ORDER BY kycDetails.createDate DESC";

	public static final String ORDER_BY_SQL =
		" ORDER BY Panasonic_KycDetails.createDate DESC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long USERID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CREATEDATE_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public KycDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _kycDetailId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setKycDetailId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _kycDetailId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return KycDetails.class;
	}

	@Override
	public String getModelClassName() {
		return KycDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<KycDetails, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<KycDetails, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<KycDetails, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((KycDetails)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<KycDetails, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<KycDetails, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(KycDetails)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<KycDetails, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<KycDetails, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<KycDetails, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<KycDetails, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<KycDetails, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<KycDetails, Object>>();
		Map<String, BiConsumer<KycDetails, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<KycDetails, ?>>();

		attributeGetterFunctions.put("uuid", KycDetails::getUuid);
		attributeSetterBiConsumers.put(
			"uuid", (BiConsumer<KycDetails, String>)KycDetails::setUuid);
		attributeGetterFunctions.put("kycDetailId", KycDetails::getKycDetailId);
		attributeSetterBiConsumers.put(
			"kycDetailId",
			(BiConsumer<KycDetails, Long>)KycDetails::setKycDetailId);
		attributeGetterFunctions.put("groupId", KycDetails::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId", (BiConsumer<KycDetails, Long>)KycDetails::setGroupId);
		attributeGetterFunctions.put("companyId", KycDetails::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<KycDetails, Long>)KycDetails::setCompanyId);
		attributeGetterFunctions.put("userId", KycDetails::getUserId);
		attributeSetterBiConsumers.put(
			"userId", (BiConsumer<KycDetails, Long>)KycDetails::setUserId);
		attributeGetterFunctions.put("userName", KycDetails::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<KycDetails, String>)KycDetails::setUserName);
		attributeGetterFunctions.put("createDate", KycDetails::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<KycDetails, Date>)KycDetails::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", KycDetails::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<KycDetails, Date>)KycDetails::setModifiedDate);
		attributeGetterFunctions.put("address", KycDetails::getAddress);
		attributeSetterBiConsumers.put(
			"address", (BiConsumer<KycDetails, String>)KycDetails::setAddress);
		attributeGetterFunctions.put("panNumber", KycDetails::getPanNumber);
		attributeSetterBiConsumers.put(
			"panNumber",
			(BiConsumer<KycDetails, String>)KycDetails::setPanNumber);
		attributeGetterFunctions.put("gstnNumber", KycDetails::getGstnNumber);
		attributeSetterBiConsumers.put(
			"gstnNumber",
			(BiConsumer<KycDetails, String>)KycDetails::setGstnNumber);
		attributeGetterFunctions.put(
			"typeOfBusiness", KycDetails::getTypeOfBusiness);
		attributeSetterBiConsumers.put(
			"typeOfBusiness",
			(BiConsumer<KycDetails, String>)KycDetails::setTypeOfBusiness);
		attributeGetterFunctions.put(
			"addressProofId", KycDetails::getAddressProofId);
		attributeSetterBiConsumers.put(
			"addressProofId",
			(BiConsumer<KycDetails, Long>)KycDetails::setAddressProofId);
		attributeGetterFunctions.put("panProofId", KycDetails::getPanProofId);
		attributeSetterBiConsumers.put(
			"panProofId",
			(BiConsumer<KycDetails, Long>)KycDetails::setPanProofId);
		attributeGetterFunctions.put("gstnProofId", KycDetails::getGstnProofId);
		attributeSetterBiConsumers.put(
			"gstnProofId",
			(BiConsumer<KycDetails, Long>)KycDetails::setGstnProofId);
		attributeGetterFunctions.put(
			"typeOfBusinessId", KycDetails::getTypeOfBusinessId);
		attributeSetterBiConsumers.put(
			"typeOfBusinessId",
			(BiConsumer<KycDetails, Long>)KycDetails::setTypeOfBusinessId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getKycDetailId() {
		return _kycDetailId;
	}

	@Override
	public void setKycDetailId(long kycDetailId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_kycDetailId = kycDetailId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalUserId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("userId"));
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getAddress() {
		if (_address == null) {
			return "";
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_address = address;
	}

	@JSON
	@Override
	public String getPanNumber() {
		if (_panNumber == null) {
			return "";
		}
		else {
			return _panNumber;
		}
	}

	@Override
	public void setPanNumber(String panNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_panNumber = panNumber;
	}

	@JSON
	@Override
	public String getGstnNumber() {
		if (_gstnNumber == null) {
			return "";
		}
		else {
			return _gstnNumber;
		}
	}

	@Override
	public void setGstnNumber(String gstnNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gstnNumber = gstnNumber;
	}

	@JSON
	@Override
	public String getTypeOfBusiness() {
		if (_typeOfBusiness == null) {
			return "";
		}
		else {
			return _typeOfBusiness;
		}
	}

	@Override
	public void setTypeOfBusiness(String typeOfBusiness) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_typeOfBusiness = typeOfBusiness;
	}

	@JSON
	@Override
	public long getAddressProofId() {
		return _addressProofId;
	}

	@Override
	public void setAddressProofId(long addressProofId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_addressProofId = addressProofId;
	}

	@JSON
	@Override
	public long getPanProofId() {
		return _panProofId;
	}

	@Override
	public void setPanProofId(long panProofId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_panProofId = panProofId;
	}

	@JSON
	@Override
	public long getGstnProofId() {
		return _gstnProofId;
	}

	@Override
	public void setGstnProofId(long gstnProofId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gstnProofId = gstnProofId;
	}

	@JSON
	@Override
	public long getTypeOfBusinessId() {
		return _typeOfBusinessId;
	}

	@Override
	public void setTypeOfBusinessId(long typeOfBusinessId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_typeOfBusinessId = typeOfBusinessId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(KycDetails.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), KycDetails.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public KycDetails toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, KycDetails>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		KycDetailsImpl kycDetailsImpl = new KycDetailsImpl();

		kycDetailsImpl.setUuid(getUuid());
		kycDetailsImpl.setKycDetailId(getKycDetailId());
		kycDetailsImpl.setGroupId(getGroupId());
		kycDetailsImpl.setCompanyId(getCompanyId());
		kycDetailsImpl.setUserId(getUserId());
		kycDetailsImpl.setUserName(getUserName());
		kycDetailsImpl.setCreateDate(getCreateDate());
		kycDetailsImpl.setModifiedDate(getModifiedDate());
		kycDetailsImpl.setAddress(getAddress());
		kycDetailsImpl.setPanNumber(getPanNumber());
		kycDetailsImpl.setGstnNumber(getGstnNumber());
		kycDetailsImpl.setTypeOfBusiness(getTypeOfBusiness());
		kycDetailsImpl.setAddressProofId(getAddressProofId());
		kycDetailsImpl.setPanProofId(getPanProofId());
		kycDetailsImpl.setGstnProofId(getGstnProofId());
		kycDetailsImpl.setTypeOfBusinessId(getTypeOfBusinessId());

		kycDetailsImpl.resetOriginalValues();

		return kycDetailsImpl;
	}

	@Override
	public KycDetails cloneWithOriginalValues() {
		KycDetailsImpl kycDetailsImpl = new KycDetailsImpl();

		kycDetailsImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		kycDetailsImpl.setKycDetailId(
			this.<Long>getColumnOriginalValue("kycDetailId"));
		kycDetailsImpl.setGroupId(this.<Long>getColumnOriginalValue("groupId"));
		kycDetailsImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		kycDetailsImpl.setUserId(this.<Long>getColumnOriginalValue("userId"));
		kycDetailsImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		kycDetailsImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		kycDetailsImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		kycDetailsImpl.setAddress(
			this.<String>getColumnOriginalValue("address"));
		kycDetailsImpl.setPanNumber(
			this.<String>getColumnOriginalValue("panNumber"));
		kycDetailsImpl.setGstnNumber(
			this.<String>getColumnOriginalValue("gstnNumber"));
		kycDetailsImpl.setTypeOfBusiness(
			this.<String>getColumnOriginalValue("typeOfBusiness"));
		kycDetailsImpl.setAddressProofId(
			this.<Long>getColumnOriginalValue("addressProofId"));
		kycDetailsImpl.setPanProofId(
			this.<Long>getColumnOriginalValue("panProofId"));
		kycDetailsImpl.setGstnProofId(
			this.<Long>getColumnOriginalValue("gstnProofId"));
		kycDetailsImpl.setTypeOfBusinessId(
			this.<Long>getColumnOriginalValue("typeOfBusinessId"));

		return kycDetailsImpl;
	}

	@Override
	public int compareTo(KycDetails kycDetails) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), kycDetails.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof KycDetails)) {
			return false;
		}

		KycDetails kycDetails = (KycDetails)object;

		long primaryKey = kycDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<KycDetails> toCacheModel() {
		KycDetailsCacheModel kycDetailsCacheModel = new KycDetailsCacheModel();

		kycDetailsCacheModel.uuid = getUuid();

		String uuid = kycDetailsCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			kycDetailsCacheModel.uuid = null;
		}

		kycDetailsCacheModel.kycDetailId = getKycDetailId();

		kycDetailsCacheModel.groupId = getGroupId();

		kycDetailsCacheModel.companyId = getCompanyId();

		kycDetailsCacheModel.userId = getUserId();

		kycDetailsCacheModel.userName = getUserName();

		String userName = kycDetailsCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			kycDetailsCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			kycDetailsCacheModel.createDate = createDate.getTime();
		}
		else {
			kycDetailsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			kycDetailsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			kycDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		kycDetailsCacheModel.address = getAddress();

		String address = kycDetailsCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			kycDetailsCacheModel.address = null;
		}

		kycDetailsCacheModel.panNumber = getPanNumber();

		String panNumber = kycDetailsCacheModel.panNumber;

		if ((panNumber != null) && (panNumber.length() == 0)) {
			kycDetailsCacheModel.panNumber = null;
		}

		kycDetailsCacheModel.gstnNumber = getGstnNumber();

		String gstnNumber = kycDetailsCacheModel.gstnNumber;

		if ((gstnNumber != null) && (gstnNumber.length() == 0)) {
			kycDetailsCacheModel.gstnNumber = null;
		}

		kycDetailsCacheModel.typeOfBusiness = getTypeOfBusiness();

		String typeOfBusiness = kycDetailsCacheModel.typeOfBusiness;

		if ((typeOfBusiness != null) && (typeOfBusiness.length() == 0)) {
			kycDetailsCacheModel.typeOfBusiness = null;
		}

		kycDetailsCacheModel.addressProofId = getAddressProofId();

		kycDetailsCacheModel.panProofId = getPanProofId();

		kycDetailsCacheModel.gstnProofId = getGstnProofId();

		kycDetailsCacheModel.typeOfBusinessId = getTypeOfBusinessId();

		return kycDetailsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<KycDetails, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<KycDetails, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<KycDetails, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((KycDetails)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, KycDetails>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					KycDetails.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _kycDetailId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _address;
	private String _panNumber;
	private String _gstnNumber;
	private String _typeOfBusiness;
	private long _addressProofId;
	private long _panProofId;
	private long _gstnProofId;
	private long _typeOfBusinessId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<KycDetails, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((KycDetails)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("kycDetailId", _kycDetailId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("address", _address);
		_columnOriginalValues.put("panNumber", _panNumber);
		_columnOriginalValues.put("gstnNumber", _gstnNumber);
		_columnOriginalValues.put("typeOfBusiness", _typeOfBusiness);
		_columnOriginalValues.put("addressProofId", _addressProofId);
		_columnOriginalValues.put("panProofId", _panProofId);
		_columnOriginalValues.put("gstnProofId", _gstnProofId);
		_columnOriginalValues.put("typeOfBusinessId", _typeOfBusinessId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("kycDetailId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("address", 256L);

		columnBitmasks.put("panNumber", 512L);

		columnBitmasks.put("gstnNumber", 1024L);

		columnBitmasks.put("typeOfBusiness", 2048L);

		columnBitmasks.put("addressProofId", 4096L);

		columnBitmasks.put("panProofId", 8192L);

		columnBitmasks.put("gstnProofId", 16384L);

		columnBitmasks.put("typeOfBusinessId", 32768L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private KycDetails _escapedModel;

}